# -*- coding: utf-8 -*-
"""tpdatos complejos

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1nn3x02sgrfLZTOmGXhJBwpnq44Sveo7k

1) Dado el diccionario precios_frutas precios_frutas = {'Banana': 1200, 'Ananá': 2500, 'Melón': 3000, 'Uva': 1450} Añadir las siguientes frutas con sus respectivos precios:
● Naranja = 1200
● Manzana = 1500
● Pera = 2300
"""

# Diccionario original
precios_frutas = {
    'Banana': 1200,
    'Ananá': 2500,
    'Melón': 3000,
    'Uva': 1450
}

# Frutas nuevas a añadir
precios_frutas['Naranja'] = 1200
precios_frutas['Manzana'] = 1500
precios_frutas['Pera'] = 2300

# Mostrar diccionario actualizado
print("Diccionario actualizado de precios de frutas:")
print(precios_frutas)

"""2) Siguiendo con el diccionario precios_frutas que resulta luego de ejecutar el código desarrollado en el punto anterior, actualizar los precios de las siguientes frutas:
● Banana = 1330
● Manzana = 1700
● Melón = 2800
"""

# Diccionario actualizado luego del punto anterior
precios_frutas = {
    'Banana': 1200,
    'Ananá': 2500,
    'Melón': 3000,
    'Uva': 1450,
    'Naranja': 1200,
    'Manzana': 1500,
    'Pera': 2300
}

# Actualizar precios
precios_frutas['Banana'] = 1330
precios_frutas['Manzana'] = 1700
precios_frutas['Melón'] = 2800

# Mostrar el diccionario actualizado
print("Diccionario con precios actualizados:")
print(precios_frutas)

"""3) Siguiendo con el diccionario precios_frutas que resulta luego de ejecutar el código desarrollado en el punto anterior, crear una lista que contenga únicamente las frutas sin los precios"""

# Diccionario actualizado (resultado de los pasos anteriores)
precios_frutas = {
    'Banana': 1330,
    'Ananá': 2500,
    'Melón': 2800,
    'Uva': 1450,
    'Naranja': 1200,
    'Manzana': 1700,
    'Pera': 2300
}

# Crear lista con solo las frutas (claves)
lista_frutas = list(precios_frutas.keys())

# Mostrar la lista de frutas
print("Lista de frutas:")
print(lista_frutas)

"""7) Dado dos sets de números, representando dos listas de estudiantes que aprobaron Parcial 1 y Parcial 2:
• Mostrá los que aprobaron ambos parciales.
• Mostrá los que aprobaron solo uno de los dos.
• Mostrá la lista total de estudiantes que aprobaron al menos un parcial (sin repetir).
"""

# Sets de estudiantes que aprobaron cada parcial
parcial1 = {101, 102, 103, 104, 105}
parcial2 = {104, 105, 106, 107}

# 1. Estudiantes que aprobaron ambos parciales (intersección)
ambos_parciales = parcial1.intersection(parcial2)

# 2. Estudiantes que aprobaron solo uno de los dos (diferencia simétrica)
solo_un_parcial = parcial1.symmetric_difference(parcial2)

# 3. Lista total de estudiantes que aprobaron al menos un parcial (unión)
al_menos_un_parcial = parcial1.union(parcial2)

# Mostrar resultados
print("Estudiantes que aprobaron ambos parciales:")
print(ambos_parciales)

print("\nEstudiantes que aprobaron solo uno de los dos parciales:")
print(solo_un_parcial)

print("\nLista total de estudiantes que aprobaron al menos un parcial (sin repetir):")
print(al_menos_un_parcial)

"""8) Armá un diccionario donde las claves sean nombres de productos y los valores su stock. Permití al usuario:
• Consultar el stock de un producto ingresado.
• Agregar unidades al stock si el producto ya existe.
• Agregar un nuevo producto si no existe.
"""

def mostrar_menu():
    print("\nOpciones:")
    print("1 - Consultar stock")
    print("2 - Agregar unidades a un producto existente")
    print("3 - Agregar un nuevo producto")
    print("4 - Salir")

def main():
    # Diccionario inicial vacío
    stock_productos = {}

    while True:
        mostrar_menu()
        opcion = input("Elegí una opción: ")

        if opcion == '1':
            producto = input("Ingrese el nombre del producto a consultar: ").strip()
            if producto in stock_productos:
                print(f"Stock de '{producto}': {stock_productos[producto]} unidades.")
            else:
                print(f"El producto '{producto}' no existe en el inventario.")

        elif opcion == '2':
            producto = input("Ingrese el nombre del producto para agregar unidades: ").strip()
            if producto in stock_productos:
                try: